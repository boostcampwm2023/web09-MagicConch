version: "3.3"

services:
  was-blue:
    image: "${DOCKER_USERNAME}/magicconch:was-blue-${GITHUB_SHA}"
    container_name: "was-blue"
    build:
      context: .
      dockerfile: Dockerfile.was
    environment:
      - DB_PORT=${DB_PORT}
      - DB_HOST=${DB_HOST}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_DATABASE=${DB_DATABASE}
      - ACCESS_KEY_ID=${ACCESS_KEY_ID}
      - SECRET_KEY=${SECRET_KEY}
      - X_NCP_CLOVASTUDIO_API_KEY=${X_NCP_CLOVASTUDIO_API_KEY}
      - X_NCP_APIGW_API_KEY=${X_NCP_APIGW_API_KEY}
      - PORT=3000
    expose:
      - "3000"
    volumes:
      - /var/log/was:/app/was/logs
      - /var/log/typeorm:/app/was/typeorm.log

  signal-blue:
    image: "${DOCKER_USERNAME}/magicconch:signal-blue-${GITHUB_SHA}"
    container_name: "signal-blue"
    build:
      context: .
      dockerfile: Dockerfile.signal
    environment:
      - PORT=3001
    expose:
      - "3001"

  coturn-server:
    image: "coturn/coturn"
    container_name: "coturn-server"
    expose:
      - "3478"
      - "3478/udp"
      - "5349"
      - "5349/udp"
    volumes:
      - /etc/turnserver.conf:/etc/turnserver.conf
      - /var/log/coturn:/var/tmp/turn.log

  nginx:
    container_name: "nginx-reverse-proxy"
    build:
      context: .
      dockerfile: Dockerfile.nginx
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - was-blue
      - signal-blue
      - coturn-server
      - certbot
    volumes:
      - /var/log/nginx:/var/log/nginx

  certbot:
    image: certbot/certbot
    volumes:
      - /etc/letsencrypt
      - /var/www/html:/var/www/html
    command: certonly --webroot --webroot-path=/var/www/html -d was.tarotmilktea.com
