name: Blue/Green CD

on:
  push:
    branches: ["BE/refactor/#440-과부하-테스트"]

env:
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  GITHUB_SHA: ${{ github.sha }}
  TURN_SERVER_NAME: ${{ secrets.TURN_SERVER_NAME }}
  TURN_SERVER_USER: ${{ secrets.TURN_SERVER_USER }}
  TURN_SERVER_PASSWORD: ${{ secrets.TURN_SERVER_PASSWORD }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Generate .env file and SSL files
        run: |
          cd backend
          echo "${{ secrets.ENV_FILE }}" > .env
          echo "DOCKER_USERNAME=${{ secrets.DOCKER_USERNAME }}" >> .env
          echo "GITHUB_SHA=${{ github.sha }}" >> .env
          echo "TURN_SERVER_NAME=${{ secrets.TURN_SERVER_NAME }}" >> .env
          echo "TURN_SERVER_USER=${{ secrets.TURN_SERVER_USER }}" >> .env
          echo "TURN_SERVER_PASSWORD=${{ secrets.TURN_SERVER_PASSWORD }}" >> .env
          echo "SENTRY_DSN=${{ secrets.SENTRY_DSN }}" >> .env
          mkdir -p config/nginx/ssl/
          echo "${{ secrets.SSL_OPTIONS }}" > config/nginx/ssl/options-ssl-nginx.conf
          echo "${{ secrets.SSL_FULLCHAIN }}" > config/nginx/ssl/fullchain.pem
          echo "${{ secrets.SSL_PRIVKEY }}" > config/nginx/ssl/privkey.pem
          echo "${{ secrets.SSL_DHPARAMS }}" > config/nginx/ssl/ssl-dhparams.pem

      - name: Copy .env, deploy script, SSL files to Remote Server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: ${{ secrets.SSH_PORT }}
          source: "backend/.env,backend/deploy.sh,backend/config"
          target: "~/app/"
          overwrite: true

      - name: Docker login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}

      - name: Build & Push Docker Images (Blue & Green)
        run: |
          cd backend
          docker-compose -f docker-compose.blue.yml build --no-cache
          docker-compose -f docker-compose.green.yml build --no-cache
          docker-compose -f docker-compose.blue.yml push
          docker-compose -f docker-compose.green.yml push

      - name: Copy Dockerfiles to Remote Server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: ${{ secrets.SSH_PORT }}
          source: "backend/docker-compose.blue.yml,backend/docker-compose.green.yml,backend/Dockerfile.nginx,backend/Dockerfile.was,backend/Dockerfile.signal"
          target: "~/app/"
          overwrite: true

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}

      - name: Run Docker on Remote Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            cd ~/app/backend
            chmod +x deploy.sh
            source deploy.sh
