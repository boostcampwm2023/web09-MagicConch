name: Blue/Green CD

on:
  push:
    paths: ["backend/**"]
    branches: ["dev", "BE/bugfix/#488-도커-healthcheck"]

env:
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  GITHUB_SHA: ${{ github.sha }}

jobs:
  backend-build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Generate .env file and SSL files
        run: |
          cd backend
          echo "${{ secrets.ENV_FILE }}" > .env
          echo "DOCKER_USERNAME=${{ secrets.DOCKER_USERNAME }}" >> .env
          echo "GITHUB_SHA=${{ github.sha }}" >> .env
          mkdir -p config/nginx/ssl/
          echo "${{ secrets.SSL_OPTIONS }}" > config/nginx/ssl/options-ssl-nginx.conf
          echo "${{ secrets.SSL_FULLCHAIN }}" > config/nginx/ssl/fullchain.pem
          echo "${{ secrets.SSL_PRIVKEY }}" > config/nginx/ssl/privkey.pem
          echo "${{ secrets.SSL_DHPARAMS }}" > config/nginx/ssl/ssl-dhparams.pem

      - name: Add Remote Host Key to known_hosts
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PUBLIC_KEY }}" >> ~/.ssh/known_hosts

      - name: Copy some files needed for Deployment to Remote Server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          source: "backend/.env,backend/deploy.sh,backend/config,backend/compose.blue-deploy.yml,backend/compose.green-deploy.yml,backend/Dockerfile.nginx"
          target: "~/app/"
          overwrite: true

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}

      - name: Build & Push Docker Images (Blue & Green)
        run: |
          cd backend
          docker-compose -f compose.blue-build.yml build
          docker-compose -f compose.green-build.yml build
          docker-compose -f compose.blue-build.yml push
          docker-compose -f compose.green-build.yml push

  backend-deploy:
    needs: backend-build
    runs-on: ubuntu-latest

    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}

      - name: Run a New Version of the application on Remote Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            cd ~/app/backend
            chmod +x deploy.sh
            source deploy.sh

      - uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          author_name: Blue/Green CD
          fields: message,author,action,workflow,job,took,pullRequest
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URI_FOR_GITHUB_ACTIONS }}
