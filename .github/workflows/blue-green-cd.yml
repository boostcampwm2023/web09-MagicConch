name: Blue/Green CD

on:
  push:
    branches: ["dev"]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Generate .env file and SSL files
        run: |
          cd backend
          echo "${{ secrets.ENV_FILE }}" > .env
          mkdir -p config/nginx/ssl/
          echo "${{ secrets.SSL_OPTIONS }}" > config/nginx/ssl/options-ssl-nginx.conf
          echo "${{ secrets.SSL_FULLCHAIN }}" > config/nginx/ssl/fullchain.pem
          echo "${{ secrets.SSL_PRIVKEY }}" > config/nginx/ssl/privkey.pem
          echo "${{ secrets.SSL_DHPARAMS }}" > config/nginx/ssl/ssl-dhparams.pem

      - name: Copy .env, deploy script, SSL files to Remote Server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: ${{ secrets.SSH_PORT }}
          source: "backend/.env,backend/deploy.sh,backend/config"
          target: "~/app/"
          overwrite: true

      - name: Build Docker Images (Blue)
        run: |
          cd backend
          cp docker-compose.blue.yml docker-compose.${{ github.sha }}.blue.yml
          docker-compose -f docker-compose.${{ github.sha }}.blue.yml build --no-cache -t "${{ secrets.DOCKER_USERNAME }}/magicconch:latest-blue"

      - name: Push Docker Images to Registry (Blue)
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}
      - run: docker-compose -f backend/docker-compose.${{ github.sha }}.blue.yml push

      - name: Build Docker Images (Green)
        run: |
          cd backend
          cp docker-compose.green.yml docker-compose.${{ github.sha }}.green.yml
          docker-compose -f docker-compose.${{ github.sha }}.green.yml build --no-cache -t "${{ secrets.DOCKER_USERNAME }}/magicconch:latest-green"

      - name: Push Docker Images to Registry (Green)
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}
      - run: docker-compose -f backend/docker-compose.${{ github.sha }}.green.yml push

      - name: Copy Dockerfiles to Remote Server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: ${{ secrets.SSH_PORT }}
          source: "backend/docker-compose.${{ github.sha }}.blue.yml,backend/docker-compose.${{ github.sha }}.green.yml,backend/Dockerfile.nginx,backend/Dockerfile.was,backend/Dockerfile.signal"
          target: "~/app/"
          overwrite: true

      - name: Remove local docker-compose copied file
        run: |
          cd backend
          rm docker-compose.${{ github.sha }}.blue.yml
          rm docker-compose.${{ github.sha }}.green.yml

  deploy:
    timeout-minutes: 30
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}

      - name: Run Docker on Remote Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            cd ~/app/backend
            source deploy.sh "${{ github.sha }}"
